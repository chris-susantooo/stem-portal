{"version":3,"sources":["webpack:///../../../src/mixins/mobile/index.ts","webpack:///../../../src/components/VSlideGroup/VSlideGroup.ts","webpack:///../../../src/directives/touch/index.ts"],"names":["name","props","mobileBreakpoint","type","Number","default","this","$vuetify","breakpoint","validator","v","isNaN","includes","String","computed","isMobile","mobile","mobileWidth","parseInt","isNumber","width","created","$attrs","hasOwnProperty","BaseSlideGroup","mixins","directives","Resize","Touch","activeClass","centerActive","nextIcon","prevIcon","showArrows","Boolean","data","internalItemsLength","isOverflowing","resizeTimeout","startX","scrollOffset","widths","content","wrapper","__cachedNext","genTransition","__cachedPrev","classes","hasAffixes","hasNext","Math","hasPrev","watch","internalValue","beforeUpdate","$children","updated","methods","genNext","slot","$scopedSlots","next","$slots","$createElement","staticClass","class","on","click","key","genContent","ref","genData","value","onResize","genIcon","icon","rtl","location","upperLocation","hasAffix","VIcon","disabled","genPrev","prev","genWrapper","start","e","move","end","calculateNewOffset","sign","newAbosluteOffset","direction","onAffixClick","onTouchStart","onTouchMove","onTouchEnd","maxScrollOffset","overflowCheck","fn","scrollIntoView","selectedIndex","calculateCenteredOffset","selectedItem","calculateUpdatedOffset","clientWidth","selectedElement","offsetLeft","currentScrollOffset","totalWidth","itemOffset","additionalOffset","offsetCentered","scrollTo","$refs","setWidths","window","render","h","provide","slideGroup","handleGesture","touchendY","dirRatio","minDistance","touchendX","touchstartX","touchstartY","touch","event","Object","createHandlers","touchmoveX","touchmoveY","offsetX","offsetY","left","right","up","down","touchstart","touchend","touchmove","inserted","binding","target","el","options","passive","handlers","vnode","eventName","unbind"],"mappings":"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","file":"js/chunk-3206c3f1.3b3062dd.js","sourcesContent":["// Types\nimport { BreakpointName } from 'vuetify/types/services/breakpoint'\nimport { deprecate } from '../../util/console'\nimport Vue, { PropType } from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'mobile',\n\n  props: {\n    mobileBreakpoint: {\n      type: [Number, String] as PropType<BreakpointName>,\n      default (): BreakpointName | undefined {\n        // Avoid destroying unit\n        // tests for users\n        return this.$vuetify\n          ? this.$vuetify.breakpoint.mobileBreakpoint\n          : undefined\n      },\n      validator: v => (\n        !isNaN(Number(v)) ||\n        ['xs', 'sm', 'md', 'lg', 'xl'].includes(String(v))\n      ),\n    },\n  },\n\n  computed: {\n    isMobile (): boolean {\n      const {\n        mobile,\n        width,\n        name,\n        mobileBreakpoint,\n      } = this.$vuetify.breakpoint\n\n      // Check if local mobileBreakpoint matches\n      // the application's mobileBreakpoint\n      if (mobileBreakpoint === this.mobileBreakpoint) return mobile\n\n      const mobileWidth = parseInt(this.mobileBreakpoint, 10)\n      const isNumber = !isNaN(mobileWidth)\n\n      return isNumber\n        ? width < mobileWidth\n        : name === this.mobileBreakpoint\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('mobile-break-point')) {\n      deprecate('mobile-break-point', 'mobile-breakpoint', this)\n    }\n  },\n})\n","// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport { VFadeTransition } from '../transitions'\n\n// Extensions\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'\n\n// Mixins\nimport Mobile from '../../mixins/mobile'\n\n// Directives\nimport Resize from '../../directives/resize'\nimport Touch from '../../directives/touch'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode } from 'vue'\n\ninterface TouchEvent {\n  touchstartX: number\n  touchmoveX: number\n  stopPropagation: Function\n}\n\ninterface Widths {\n  content: number\n  wrapper: number\n}\n\ninterface options extends Vue {\n  $refs: {\n    content: HTMLElement\n    wrapper: HTMLElement\n  }\n}\n\nexport const BaseSlideGroup = mixins<options &\n/* eslint-disable indent */\n  ExtractVue<[\n    typeof BaseItemGroup,\n    typeof Mobile,\n  ]>\n/* eslint-enable indent */\n>(\n  BaseItemGroup,\n  Mobile,\n  /* @vue/component */\n).extend({\n  name: 'base-slide-group',\n\n  directives: {\n    Resize,\n    Touch,\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-slide-item--active',\n    },\n    centerActive: Boolean,\n    nextIcon: {\n      type: String,\n      default: '$next',\n    },\n    prevIcon: {\n      type: String,\n      default: '$prev',\n    },\n    showArrows: {\n      type: [Boolean, String],\n      validator: v => (\n        typeof v === 'boolean' || [\n          'always',\n          'desktop',\n          'mobile',\n        ].includes(v)\n      ),\n    },\n  },\n\n  data: () => ({\n    internalItemsLength: 0,\n    isOverflowing: false,\n    resizeTimeout: 0,\n    startX: 0,\n    scrollOffset: 0,\n    widths: {\n      content: 0,\n      wrapper: 0,\n    },\n  }),\n\n  computed: {\n    __cachedNext (): VNode {\n      return this.genTransition('next')\n    },\n    __cachedPrev (): VNode {\n      return this.genTransition('prev')\n    },\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-slide-group': true,\n        'v-slide-group--has-affixes': this.hasAffixes,\n        'v-slide-group--is-overflowing': this.isOverflowing,\n      }\n    },\n    hasAffixes (): Boolean {\n      switch (this.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always': return true\n\n        // Always show arrows on desktop\n        case 'desktop': return !this.isMobile\n\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n        case true: return this.isOverflowing\n\n        // Always show on mobile\n        case 'mobile': return (\n          this.isMobile ||\n          this.isOverflowing\n        )\n\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n        default: return (\n          !this.isMobile &&\n          this.isOverflowing\n        )\n      }\n    },\n    hasNext (): boolean {\n      if (!this.hasAffixes) return false\n\n      const { content, wrapper } = this.widths\n\n      // Check one scroll ahead to know the width of right-most item\n      return content > Math.abs(this.scrollOffset) + wrapper\n    },\n    hasPrev (): boolean {\n      return this.hasAffixes && this.scrollOffset !== 0\n    },\n  },\n\n  watch: {\n    internalValue: 'setWidths',\n    // When overflow changes, the arrows alter\n    // the widths of the content and wrapper\n    // and need to be recalculated\n    isOverflowing: 'setWidths',\n    scrollOffset (val) {\n      this.$refs.content.style.transform = `translateX(${-val}px)`\n    },\n  },\n\n  beforeUpdate () {\n    this.internalItemsLength = (this.$children || []).length\n  },\n\n  updated () {\n    if (this.internalItemsLength === (this.$children || []).length) return\n    this.setWidths()\n  },\n\n  methods: {\n    // Always generate next for scrollable hint\n    genNext (): VNode | null {\n      const slot = this.$scopedSlots.next\n        ? this.$scopedSlots.next({})\n        : this.$slots.next || this.__cachedNext\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__next',\n        class: {\n          'v-slide-group__next--disabled': !this.hasNext,\n        },\n        on: {\n          click: () => this.onAffixClick('next'),\n        },\n        key: 'next',\n      }, [slot])\n    },\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__content',\n        ref: 'content',\n      }, this.$slots.default)\n    },\n    genData (): object {\n      return {\n        class: this.classes,\n        directives: [{\n          name: 'resize',\n          value: this.onResize,\n        }],\n      }\n    },\n    genIcon (location: 'prev' | 'next'): VNode | null {\n      let icon = location\n\n      if (this.$vuetify.rtl && location === 'prev') {\n        icon = 'next'\n      } else if (this.$vuetify.rtl && location === 'next') {\n        icon = 'prev'\n      }\n\n      const upperLocation = `${location[0].toUpperCase()}${location.slice(1)}`\n      const hasAffix = (this as any)[`has${upperLocation}`]\n\n      if (\n        !this.showArrows &&\n        !hasAffix\n      ) return null\n\n      return this.$createElement(VIcon, {\n        props: {\n          disabled: !hasAffix,\n        },\n      }, (this as any)[`${icon}Icon`])\n    },\n    // Always generate prev for scrollable hint\n    genPrev (): VNode | null {\n      const slot = this.$scopedSlots.prev\n        ? this.$scopedSlots.prev({})\n        : this.$slots.prev || this.__cachedPrev\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__prev',\n        class: {\n          'v-slide-group__prev--disabled': !this.hasPrev,\n        },\n        on: {\n          click: () => this.onAffixClick('prev'),\n        },\n        key: 'prev',\n      }, [slot])\n    },\n    genTransition (location: 'prev' | 'next') {\n      return this.$createElement(VFadeTransition, [this.genIcon(location)])\n    },\n    genWrapper (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__wrapper',\n        directives: [{\n          name: 'touch',\n          value: {\n            start: (e: TouchEvent) => this.overflowCheck(e, this.onTouchStart),\n            move: (e: TouchEvent) => this.overflowCheck(e, this.onTouchMove),\n            end: (e: TouchEvent) => this.overflowCheck(e, this.onTouchEnd),\n          },\n        }],\n        ref: 'wrapper',\n      }, [this.genContent()])\n    },\n    calculateNewOffset (direction: 'prev' | 'next', widths: Widths, rtl: boolean, currentScrollOffset: number) {\n      const sign = rtl ? -1 : 1\n      const newAbosluteOffset = sign * currentScrollOffset +\n        (direction === 'prev' ? -1 : 1) * widths.wrapper\n\n      return sign * Math.max(Math.min(newAbosluteOffset, widths.content - widths.wrapper), 0)\n    },\n    onAffixClick (location: 'prev' | 'next') {\n      this.$emit(`click:${location}`)\n      this.scrollTo(location)\n    },\n    onResize () {\n      /* istanbul ignore next */\n      if (this._isDestroyed) return\n\n      this.setWidths()\n    },\n    onTouchStart (e: TouchEvent) {\n      const { content } = this.$refs\n\n      this.startX = this.scrollOffset + e.touchstartX as number\n\n      content.style.setProperty('transition', 'none')\n      content.style.setProperty('willChange', 'transform')\n    },\n    onTouchMove (e: TouchEvent) {\n      this.scrollOffset = this.startX - e.touchmoveX\n    },\n    onTouchEnd () {\n      const { content, wrapper } = this.$refs\n      const maxScrollOffset = content.clientWidth - wrapper.clientWidth\n\n      content.style.setProperty('transition', null)\n      content.style.setProperty('willChange', null)\n\n      if (this.$vuetify.rtl) {\n        /* istanbul ignore else */\n        if (this.scrollOffset > 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset <= -maxScrollOffset) {\n          this.scrollOffset = -maxScrollOffset\n        }\n      } else {\n        /* istanbul ignore else */\n        if (this.scrollOffset < 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset >= maxScrollOffset) {\n          this.scrollOffset = maxScrollOffset\n        }\n      }\n    },\n    overflowCheck (e: TouchEvent, fn: (e: TouchEvent) => void) {\n      e.stopPropagation()\n      this.isOverflowing && fn(e)\n    },\n    scrollIntoView /* istanbul ignore next */ () {\n      if (!this.selectedItem) {\n        return\n      }\n\n      if (\n        this.selectedIndex === 0 ||\n        (!this.centerActive && !this.isOverflowing)\n      ) {\n        this.scrollOffset = 0\n      } else if (this.centerActive) {\n        this.scrollOffset = this.calculateCenteredOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl\n        )\n      } else if (this.isOverflowing) {\n        this.scrollOffset = this.calculateUpdatedOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl,\n          this.scrollOffset\n        )\n      }\n    },\n    calculateUpdatedOffset (selectedElement: HTMLElement, widths: Widths, rtl: boolean, currentScrollOffset: number): number {\n      const clientWidth = selectedElement.clientWidth\n      const offsetLeft = rtl\n        ? (widths.content - selectedElement.offsetLeft - clientWidth)\n        : selectedElement.offsetLeft\n\n      if (rtl) {\n        currentScrollOffset = -currentScrollOffset\n      }\n\n      const totalWidth = widths.wrapper + currentScrollOffset\n      const itemOffset = clientWidth + offsetLeft\n      const additionalOffset = clientWidth * 0.4\n\n      if (offsetLeft < currentScrollOffset) {\n        currentScrollOffset = Math.max(offsetLeft - additionalOffset, 0)\n      } else if (totalWidth < itemOffset) {\n        currentScrollOffset = Math.min(currentScrollOffset - (totalWidth - itemOffset - additionalOffset), widths.content - widths.wrapper)\n      }\n\n      return rtl ? -currentScrollOffset : currentScrollOffset\n    },\n    calculateCenteredOffset (selectedElement: HTMLElement, widths: Widths, rtl: boolean): number {\n      const { offsetLeft, clientWidth } = selectedElement\n\n      if (rtl) {\n        const offsetCentered = widths.content - offsetLeft - clientWidth / 2 - widths.wrapper / 2\n        return -Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n      } else {\n        const offsetCentered = offsetLeft + clientWidth / 2 - widths.wrapper / 2\n        return Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n      }\n    },\n    scrollTo /* istanbul ignore next */ (location: 'prev' | 'next') {\n      this.scrollOffset = this.calculateNewOffset(location, {\n        // Force reflow\n        content: this.$refs.content ? this.$refs.content.clientWidth : 0,\n        wrapper: this.$refs.wrapper ? this.$refs.wrapper.clientWidth : 0,\n      }, this.$vuetify.rtl, this.scrollOffset)\n    },\n    setWidths /* istanbul ignore next */  () {\n      window.requestAnimationFrame(() => {\n        const { content, wrapper } = this.$refs\n\n        this.widths = {\n          content: content ? content.clientWidth : 0,\n          wrapper: wrapper ? wrapper.clientWidth : 0,\n        }\n\n        this.isOverflowing = this.widths.wrapper < this.widths.content\n\n        this.scrollIntoView()\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.genData(), [\n      this.genPrev(),\n      this.genWrapper(),\n      this.genNext(),\n    ])\n  },\n})\n\nexport default BaseSlideGroup.extend({\n  name: 'v-slide-group',\n\n  provide (): object {\n    return {\n      slideGroup: this,\n    }\n  },\n})\n","import { VNodeDirective, VNode } from 'vue/types/vnode'\nimport { keys } from '../../util/helpers'\nimport { TouchHandlers, TouchValue, TouchWrapper } from 'vuetify/types'\n\nexport interface TouchStoredHandlers {\n  touchstart: (e: TouchEvent) => void\n  touchend: (e: TouchEvent) => void\n  touchmove: (e: TouchEvent) => void\n}\n\ninterface TouchVNodeDirective extends VNodeDirective {\n  value?: TouchValue\n}\n\nconst handleGesture = (wrapper: TouchWrapper) => {\n  const { touchstartX, touchendX, touchstartY, touchendY } = wrapper\n  const dirRatio = 0.5\n  const minDistance = 16\n  wrapper.offsetX = touchendX - touchstartX\n  wrapper.offsetY = touchendY - touchstartY\n\n  if (Math.abs(wrapper.offsetY) < dirRatio * Math.abs(wrapper.offsetX)) {\n    wrapper.left && (touchendX < touchstartX - minDistance) && wrapper.left(wrapper)\n    wrapper.right && (touchendX > touchstartX + minDistance) && wrapper.right(wrapper)\n  }\n\n  if (Math.abs(wrapper.offsetX) < dirRatio * Math.abs(wrapper.offsetY)) {\n    wrapper.up && (touchendY < touchstartY - minDistance) && wrapper.up(wrapper)\n    wrapper.down && (touchendY > touchstartY + minDistance) && wrapper.down(wrapper)\n  }\n}\n\nfunction touchstart (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchstartX = touch.clientX\n  wrapper.touchstartY = touch.clientY\n\n  wrapper.start &&\n    wrapper.start(Object.assign(event, wrapper))\n}\n\nfunction touchend (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchendX = touch.clientX\n  wrapper.touchendY = touch.clientY\n\n  wrapper.end &&\n    wrapper.end(Object.assign(event, wrapper))\n\n  handleGesture(wrapper)\n}\n\nfunction touchmove (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchmoveX = touch.clientX\n  wrapper.touchmoveY = touch.clientY\n\n  wrapper.move && wrapper.move(Object.assign(event, wrapper))\n}\n\nfunction createHandlers (value: TouchHandlers): TouchStoredHandlers {\n  const wrapper = {\n    touchstartX: 0,\n    touchstartY: 0,\n    touchendX: 0,\n    touchendY: 0,\n    touchmoveX: 0,\n    touchmoveY: 0,\n    offsetX: 0,\n    offsetY: 0,\n    left: value.left,\n    right: value.right,\n    up: value.up,\n    down: value.down,\n    start: value.start,\n    move: value.move,\n    end: value.end,\n  }\n\n  return {\n    touchstart: (e: TouchEvent) => touchstart(e, wrapper),\n    touchend: (e: TouchEvent) => touchend(e, wrapper),\n    touchmove: (e: TouchEvent) => touchmove(e, wrapper),\n  }\n}\n\nfunction inserted (el: HTMLElement, binding: TouchVNodeDirective, vnode: VNode) {\n  const value = binding.value!\n  const target = value.parent ? el.parentElement : el\n  const options = value.options || { passive: true }\n\n  // Needed to pass unit tests\n  if (!target) return\n\n  const handlers = createHandlers(binding.value!)\n  target._touchHandlers = Object(target._touchHandlers)\n  target._touchHandlers![vnode.context!._uid] = handlers\n\n  keys(handlers).forEach(eventName => {\n    target.addEventListener(eventName, handlers[eventName] as EventListener, options)\n  })\n}\n\nfunction unbind (el: HTMLElement, binding: TouchVNodeDirective, vnode: VNode) {\n  const target = binding.value!.parent ? el.parentElement : el\n  if (!target || !target._touchHandlers) return\n\n  const handlers = target._touchHandlers[vnode.context!._uid]\n  keys(handlers).forEach(eventName => {\n    target.removeEventListener(eventName, handlers[eventName])\n  })\n  delete target._touchHandlers[vnode.context!._uid]\n}\n\nexport const Touch = {\n  inserted,\n  unbind,\n}\n\nexport default Touch\n"],"sourceRoot":""}